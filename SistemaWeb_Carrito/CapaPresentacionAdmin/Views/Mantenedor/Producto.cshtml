@{
    ViewBag.Title = "Libros";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<ol class="breadcrumb mb-4 mt-4">
    <li class="breadcrumb-item"><a href="index.html">Mantenimiento</a></li>
    <li class="breadcrumb-item active">Libros</li>
</ol>

<div class="card">
    <div class="card-header">

        <i class="fas fa-boxes me-1"></i> Lista de Libros
    </div>

    <div class="card-body">
        <div class="row">
            <div class="col-12">
                @*numero de filas*@
                <button type="button" class="btn btn-success" onclick="abrirModal(null)">Crear Nuevo</button>
            </div>
        </div>

        <hr />
        @*el id es para identificar la tabla*@
        <table id="tabla" class="display cell-border" style="width: 100%">
            <thead>
                <tr>
                    <th>Titulo</th>
                    <th>Descripcion</th>
                    <th>Autor</th>
                    <th>Categoria</th>
                    <th>Paginas</th>
                    <th>Stock</th>
                    <th>Activo</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @*ajax va permitir por ejemplo, hacer la ejecuciion del metodo listarUsuario llamada en el HomeControler*@
            </tbody>
        </table>
    </div>
</div>

<!-- Modal -->
<!-- Modal, con el id FormModal vamos a llamarlo cuando deseamos que aparezca y cuando no
    al momento de precionar el boton nuevo-->
<div class="modal fade" id="FormModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" data-bs-backdrop="static">
    <div class="modal-dialog modal-xl">
        <!--Un tamaño mas grande xl-->
        @*no poder quitar es modal a menos que demos clic en cerrar o en la x, si hacemos clic en otro lado no se puede quitar*@
        <div class="modal-content">
            <div class="modal-header bg-dark text-white">
                <h5 class="modal-title" id="exampleModalLabel">Libro</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">

                <input id="txtid" type="hidden" value="0" />@*Con el valor 0 se identifica si es un usuario nuevo a ingresar o es valor ya existe
        pero si es diferente a 0 significa que ya existe y vamos a editar*@

            <form id="contenedor" class="row">
                @*Para visualizar la imagen*@
                <div class="col-sm-3">
                    <div class="mb-2">
                        @*las ultimas instrucciones (clases) es para que sea de bloque y la imagen responsive*@
                        <img id="img_producto" height="197" width="200" class="border rounded mx-auto d-block img-fluid" />
                    </div>
                    <div class="mb-2">
                        <input class="form-control" type="file" id="fileProducto" accept="image/png, image/jpg, image/jpeg" onchange="mostrarImagen(this)" />
                    </div>
                </div>

                <div class="col-sm-3">
                    <div class="mb-3">
                        <label class="form-label">Titulo</label>
                        <input type="text" class="form-control" id="txtnombre" name="nombre" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Descripcion</label>
                        <textarea type="text" class="form-control" id="txtdescripcion" name="descripcion" style="height:125px;resize:none"></textarea>
                    </div>
                </div>


                <div class="col-sm-3">
                    <div class="mb-3">
                        <label class="form-label">Autor</label>
                        <select id="cbomarca" class="form-select">
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Categoria</label>
                        <select id="cbocategoria" class="form-select">
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Paginas</label>
                        <input type="text" class="form-control" id="txtprecio" name="precio" autocomplete="off" />
                    </div>
                </div>


                <div class="col-sm-3">
                    <div class="mb-3">
                        <label class="form-label">Stock</label>
                        <input type="number" class="form-control" id="txtstock" name="stock" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Activo</label>
                        <select id="cboactivo" class="form-select">
                            <option value="1">Si</option>
                            <option value="0">No</option>
                        </select>
                    </div>
                </div>

            </form>



                <!--Mensaje de alerta-->
                <div class="row mt-2">
                    <div class="col-12">

                        <div id="mensajeError" class="alert alert-danger" role="alert">
                        </div>

                    </div>

                </div>


            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                <button type="button" class="btn btn-primary" onclick="Guardar()">Guardar</button>
            </div>
        </div>
    </div>
</div>


@section scripts{
    <script>

        var tabladata;
        var filaSeleccionada;/*Son variables globales para se usada por lo que este dentro */

        function mostrarImagen(input) {
            if (input.files) {/*Si tiene un archivo selecciondo continuamos*/

                var reader = new FileReader();

                reader.onload = function (e) {
                    /*Pinta en la etiqueta img_producto con su src y las medidas correspondientes*/
                    $("#img_producto").attr("src",e.target.result).width(200).height(197)
                }

                reader.readAsDataURL(input.files[0]);
            }

        }


              //el hastash significa que se refiere a un id, entonces llama o igual la variable a una tabla declarada
        //anteriormente en el html de arriba con id que se llama tabla
        tabladata = $("#tabla").DataTable({
            responsive: true,
            ordering: false,
            "ajax": {
                url: '@Url.Action("ListarProducto", "Mantenedor")',
                type: "GET",
                dataType: "json"
            },
            "columns": [/*Todas las columnas que vamos a usar*/
                /*El data s el origen que se esta llamando en su controlar Mantenedir cuando igualamos en el js un data
            y el seguno valor es como se llama la columna*/
                {"data":"Titulo"},
                { "data": "Descripcion" },/*El nombre del segundo identificador debe ser igual al de la tabla, la columna*/
                {
                    "data": "oId_Marca", "render": function (data) {/*El render permite obtener el valor de la columna*/
                      return data.Nombre
                    }
                },
                {
                    "data": "oId_Categoria", "render": function (data) {
                        return data.Descripcion
                    }
                },
                { "data": "Paginas" },
                { "data": "Stock" },
                {
                    "data": "Activo", "render": function (valor) {/*El render permite obtener el valor de la columna activo*/
                        if (valor) {
                            return '<span class="badge bg-success">Si</span>'
                        } else {
                            return '<span class="badge bg-danger">No</span>'
                        }
                    }
                },
                {
                    "defaultContent": '<button type="button" class="btn btn-primary btn-sm btn-editar"><i class="fas fa-pen"></i></button>' +
                        '<button type="button" class="btn btn-danger btn-sm ms-2 btn-eliminar"><i class="fas fa-trash"></i></button>',
                    "orderable": false,
                    "searchable": false,
                    "width": "90px"
                }

            ],
            "language": {
                "url": "https://cdn.datatables.net/plug-ins/1.11.3/i18n/es_es.json"
            }

        });


        /* ahora el ajax paa listar las marcas en el cmbMarca*/

        jQuery.ajax({
            url: '@Url.Action("ListarMarcas", "Mantenedor")',
            type: "GET",
            data: null,
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (data) {

                $("<option>").attr({ "value": "0","disabled":"true" }).text("Seleccionar").appendTo("#cbomarca");
                $.each(data.data, function (index, item) {/*itera una lista*/
                    /*attr significa atibuto*/
                    /*Se crea una opcion para cmb obteniendo el valor del id y descripcion de la marca, y se asigna (appendTo)
                     al #cmbMarca del modal*/
                    $("<option>").attr({ "value": item.IdAutor }).text(item.Nombre).appendTo("#cbomarca");
                })
            },
            error: function (error) {
                console.log(error)
            }
        });

        /* ahora el ajax paa listar las Categorias en el cmbCategoria*/
          jQuery.ajax({
            url: '@Url.Action("ListarCategorias", "Mantenedor")',
            type: "GET",
            data: null,
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (data) {

                $("<option>").attr({ "value": "0", "disabled": "true" }).text("Seleccionar").appendTo("#cbocategoria");
                $.each(data.data, function (index, item) {

                    $("<option>").attr({ "value": item.IdCategoria }).text(item.Descripcion).appendTo("#cbocategoria");
                })
            },
            error: function (error) {
                console.log(error)
            }
        });

        /*Validaciones*/
        /*El metodo se llama precioDecimal*/

        jQuery.validator.addMethod("preciodecimal", function (value, element) {
            return this.optional(element) || /^\d{0,4}(\.\d{0,2})?$/i.test(value);
        }, "El formato correcto del precio es ##");


        $("#contenedor").validate({
            rules: {
                titulo: {/*Indica que el campo nombre es requerido*/
                    required : true
                },
                descripcion: {
                    required: true
                },
                paginas: {
                    required: true,
                    preciodecimal: true /*Usamos el metodo de validar precioDecimal*/
                },
                stock: {
                    required: true,
                    number:true
                }
            },
            messages: {
                nombre: "- El campo titulo es obligatorio",
                descripcion: "- El campo descripcion es obligatorio",
                precio: { required: "- El campo paginas es obligario", preciodecimal: "- El formato correcto de las paginas es ##" },
                stock: { required: "- El campo stock es obligario", preciodecimal: "- Debe ingresar solo numeros en el stock" }
            },
            errorElement: "div",
            errorLabelContainer: ".alert-danger"
        })


        /*------------------------Como se verá el modal al abrirse---------------------------------------*/



        function abrirModal(json) {/*json es el data del siguiente*/

            $("#txtid").val(0);/*Con el # llama con el id del elemento chtml*/
            $("#img_producto").removeAttr("src");/*Limpia toda imagen que ya este mostrando la etiqueta de imagen antes*/
            $("#fileProducto").val("");
            $("#txtnombre").val("");
            $("#txtdescripcion").val("");
            $("#cbomarca").val($("#cbomarca option:first").val());/*Dentro de las opciones de cmbMarca siempre selecciona el primero*/
            $("#cbocategoria").val($("#cbocategoria option:first").val());
            $("#txtprecio").val("");
            $("#txtstock").val("");
            $("#cboactivo").val(1);

            $("#mensajeError").hide();

            if (json != null) {

                $("#txtid").val(json.IdLibro);
                $("#txtnombre").val(json.Titulo);
                $("#txtdescripcion").val(json.Descripcion);
                $("#cbomarca").val(json.oId_Marca.IdAutor);
                $("#cbocategoria").val(json.oId_Categoria.IdCategoria);
                $("#txtprecio").val(json.Paginas);
                $("#txtstock").val(json.Stock);
                $("#cboactivo").val(json.Activo == true ? 1 : 0);/*Si es igual a true de el valor de uno
                 y si no es true de el valor de 0*/



                jQuery.ajax({/*Para visualizar la imagen al dar editar*/
                    url: '@Url.Action("ImagenProducto", "Mantenedor")',
                    type: "POST",
                     data: JSON.stringify({ id : json.IdLibro}),
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                     success: function (data) {

                         $("#img_producto").LoadingOverlay("hide");

                         if (data.conversion) {/*Si es verdadero, si la conversion fue exitosa*/
                            $("#img_producto").attr({ "src": "data:image/" + data.extension + ";base64," + data.textobase64 });
                        }
                    },
                    error: function (error) {
                        $("#img_producto").LoadingOverlay("hide");

                        $("#mensajeError").show();
                        $("#mensajeError").text("Error al mostrar imagen");

                    },
                    beforeSend: function () {
                        $("#img_producto").LoadingOverlay("show");
                    },
                });




            }

            $("#FormModal").modal("show");
        }

        /*--------------- Al dar clic en el boton de editar-------------------------------*/
        /*Estamos llamando a la tabla especificamente al tbody, todo ira en relacion a esa tabla*/
        $("#tabla tbody").on("click", '.btn-editar', function () {
            /*This es la misma tabla, se llama
          tr es el row o la fila seleccionado de la tabla */
            filaSeleccionada = $(this).closest("tr");

            var data =  tabladata.row(filaSeleccionada).data();
             //console.log(data);/*Para visualizar en consola*/
            abrirModal(data)

        })



        $("#tabla tbody").on("click", '.btn-eliminar', function () {

            var productoseleccionado = $(this).closest("tr");

            var data = tabladata.row(productoseleccionado).data();


            swal({
                title: "Esta Seguro?",
                text: "¿Desea eliminar el libro?",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-primary",
                confirmButtonText: "Si",
                cancelButtonText: "No",
                closeOnConfirm: true
            },
            function () {

                 jQuery.ajax({
                    url: '@Url.Action("EliminarProducto", "Mantenedor")',
                    type: "POST",
                     data: JSON.stringify({ id: data.IdLibro }),
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        /*Ese data esta almacenando la respuesta del metodo eliminar usuario
                     * hecho en homeController*/
                        //ELIMINAR PRODUCTO

                        if (data.resultado) {/*si el resultado es verdadera)*/

                            tabladata.row(productoseleccionado).remove().draw();
                        } else {

                            swal("No se pudo eliminar", data.mensaje, "error")
                        }/*Primer parametro mensaje, luego el mensaje del data, y el tercero indica que es de tipo error*/
                    },
                    error: function (error) {
                        console.log(error)
                    }
                });




            });


            console.log(data);

        })

        function Guardar() {
            /* Si no se han completado los campos * /
            /*Termina el metodo de guardar, ya no contintinua*/

            if (!$("#contenedor").valid()) {
                return;
            }



            var ImagenSeleccionada = $("#fileProducto")[0].files[0];/*Al primer archivo de la lista que pueda tener el control de fileProducto*/

            var Producto = {
                /*Los dos puntos de la condicion es "si es diferente es:"
               el signo de interrogacion es un entonces
               leyendo la sentencia de abajo seria, si el valor es igual a 1, entonces es true (verdadero)
               pero si es diferentes es falso*/
                IdLibro: $("#txtid").val(),
                Titulo: $("#txtnombre").val(),
                Descripcion: $("#txtdescripcion").val(), /*El punto val sirve para obtener un valor y para establecer un valor*/
                oId_Marca: {
                    IdAutor: $("#cbomarca option:selected").val(),
                    Nombre: $("#cbomarca option:selected").text()
                },
                oId_Categoria: {
                    IdCategoria: $("#cbocategoria option:selected").val(),
                    Descripcion: $("#cbocategoria option:selected").text()
                },
                PrecioTexto: $("#txtprecio").val(),
                Paginas: $("#txtprecio").val(),
                Stock: $("#txtstock").val(),
                Activo: $("#cboactivo").val() == 1 ? true : false,/*Para saber si se esta seleccionado un Si (Si = 0)
                 * o un no (No = 0*/
            }
            /*Para poder pasar archivos a metodos debemos usar: FormData*/
            var request = new FormData();
            request.append("objeto", JSON.stringify(Producto))
            /*Todo lo de producto anterior lo pasa a formato de texto*/
            /*Dentro de formData se crea el objeto (debe ser el mismo nombre, a como se creo el parametro
     en el metodo guardar (con parametro string = objeto) de mantenedor controller*/
            request.append("archivoImagen", ImagenSeleccionada)



           jQuery.ajax({
                url: '@Url.Action("GuardarProducto", "Mantenedor")',
                type: "POST",
               data: request,
               processData: false,
               contentType:false,
               success: function (data) {

                   $(".modal-body").LoadingOverlay("hide");

                    //PRODUCTO NUEVO
                   if (Producto.IdLibro == 0) {/*Es decir, si el id es 0 en inicio (el valor es 0 inicialmente) significa que es
                        un usuario nuevo, por lo que se ha dado dando clic con el boton de crear*/
                        /*alert("Crear usuario")*/

                       if (data.idGenerado != 0) {

                            Producto.IdLibro = data.idGenerado;
                            tabladata.row.add(Producto).draw(false);
                            $("#FormModal").modal("hide");

                        } else {
                            $("#mensajeError").text(data.mensaje);
                            $("#mensajeError").show();
                        }
                    }
                    //PRODUCTO EDITAR
                    else {
                       /*Pero si el id es diferente de 0, es decir ya existe, entonces se esta editando
                        a un usuario, por lo que indica que se ha dado clic en el boton de editar, eso lo comprobamos
                        con los alert comentados*/
                       if (data.operacionExitosa) {

                            tabladata.row(filaSeleccionada).data(Producto).draw(false);
                            filaSeleccionada = null;
                            $("#FormModal").modal("hide");
                        } else {
                            $("#mensajeError").text(data.mensaje);
                            $("#mensajeError").show();
                        }
                    }
                },
               error: function (error) {

                   $(".modal-body").LoadingOverlay("hide");
                   $("#mensajeError").text("Error Ajax");
                   $("#mensajeError").show();
                },
                beforeSend: function () {
                    $(".modal-body").LoadingOverlay("show", {
                        imageResizeFactor: 2,
                        text: "Cargando...",
                        size: 14
                    })
                }
            });




        }

        /*Nueva modificacion*/

    </script>


}


